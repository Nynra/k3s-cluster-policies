global:
  commonLabels: {}
  commonAnnotations: {}

  namespaces: 
    - production-namespace
  excludedNamespaces:
    - "kube-system"
    # Assuming this chart is deployed in the "policy-system" namespace
    - "policy-system"

enabled: true

################################################################################
# Basic Policies
#
# Basic policies are used mostly as sanity checks, to ensure operators do 
# not grind the cluster to a halt by making some basic mistakes.
#
# The basic policies close some common security holes in Kubernetes clusters.
# These policies are not meant to be comprehensive, but rather to provide a
# baseline of security for the cluster.
################################################################################

blockLatestImageTag:
  enabled: true
  dryRun: false
  namespaces: []
  excludedNamespaces: []
  exemptImages: []

# Enforce that no anonymous role bindings are created. Role bindings should
# always be bound to a specific user or group.
noAnonymousRoleBindings:
  enabled: true
  dryRun: false
  namespaces: []
  excludedNamespaces: []
  # By default we do not allow any anonymous role bindings, but you can
  # allow specific roles or cluster roles to be bound anonymously.
  allowedRoles: []
  allowedClusterRoles: []

# Enforce that the number of replicas for deployments is within a certain range.
# This is useful to prevent deployments from having too many replicas and
# overloading the cluster.
replicaLimits:
  enabled: true
  dryRun: false
  namespaces: []
  excludedNamespaces: []
  min_replicas: 1
  max_replicas: 5

# Enforce ephemeral storage limits for containers. This is useful to prevent
# containers from consuming too much ephemeral storage (non persistent temp storage)
ephemeralStorageLimit:
  enabled: true
  dryRun: false
  namespaces: []
  excludedNamespaces: []
  size: "500Mi"

# Allow certain storage classes for persistent volumes. By default will only 
# allow longhorn storage provider.
allowedStorageClasses:
  enabled: true
  dryRun: false
  namespaces: []
  excludedNamespaces: []
  includeStorageClassesInMessage: true
  storageClasses: 
    - "longhorn"

automountServiceAccountToken:
  enabled: true
  dryRun: false
  namespaces: []
  excludedNamespaces: []

blockHostNamespace:
  enabled: true
  dryRun: false
  namespaces: []
  excludedNamespaces: []

# Block services from using NodePorts.
blockNodePorts:
  enabled: true
  dryRun: false
  namespaces: []
  excludedNamespaces: []

# Block namespaces from creating LoadBalancer services. This should only be done
# by an admin or by using the traefik ingress controller.
blockLoadBalancerServices:
  enabled: true
  dryRun: false
  namespaces: []
  excludedNamespaces: 
    - "traefik"

ingress:
  # Block wildcard ingress rules. This is useful to prevent wildcard DNS entries
  # from being created in the cluster (can be used to prevent traffic interception).
  blockWildcardIngress:
    enabled: true
    dryRun: false
    namespaces: []
    excludedNamespaces: []
  
  # Enforce unique hosts for ingress rules. This is useful to prevent duplicate
  # hosts from being created in the cluster.
  enforceUniqueHosts:
    enabled: true
    dryRun: false
    namespaces: []
    excludedNamespaces: []

################################################################################
# Optional Policies
################################################################################
# Allow certain repository prefixes for images. This does not include helm
# chart repositories.
allowedRepos:
  enabled: false
  dryRun: false
  namespaces: []
  excludedNamespaces: []
  repos: 
    - "example.com/allowed/*"

# Disallow certain repository prefixes for images. This does not include helm
# chart repositories.
disallowedRepos:
  enabled: false
  dryRun: false
  namespaces: []
  excludedNamespaces: []  
  repos:
    - "example.com/not-allowed/*"

# Block certain tags for images, by default this will block the "latest" tag and 
# only warn if the image is not using a tag.
disallowedTags:
  enabled: true
  dryRun: false
  namespaces: []
  excludedNamespaces: []
  tags: 
    - "latest"
  exemptImages: []

disruptionBudget:
  enabled: true
  dryRun: false
  namespaces: []
  excludedNamespaces: []

# Enforce horizontal pod autoscaling for deployments. This is useful to prevent
# deployments from overloading the cluster with too many replicas.
horizontalPodAutoscaler:
  enabled: true
  dryRun: false
  namespaces: []
  excludedNamespaces: []
  minimumReplicaSpread: 1
  enforceScaleTargetRef: true
  ranges:
    min_replicas: 1
    max_replicas: 5

# Values to pass to the Gatekeeper Helm chart.
gatekeeper:
  enabled: true
  replicas: 1
  auditInterval: 60
  metricsBackends: ["prometheus"]
  constraintViolationsLimit: 20
  auditFromCache: false
  disableAudit: false
  disableMutation: false
  disableValidatingWebhook: false
  validatingWebhookFailurePolicy: Ignore
  validatingWebhookCheckIgnoreFailurePolicy: Fail
  validatingWebhookURL: null
  validatingWebhookScope: '*'
  enableDeleteOperations: false
  enableConnectOperations: false
  enableExternalData: true
  enableGeneratorResourceExpansion: true
  enableTLSHealthcheck: false
  mutatingWebhookName: gatekeeper-mutating-webhook-configuration
  mutatingWebhookFailurePolicy: Ignore
  logLevel: INFO
  logDenies: false
  logMutations: false
  admissionEventsInvolvedNamespace: false
  auditEventsInvolvedNamespace: false
  resourceQuota: true